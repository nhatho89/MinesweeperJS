{"version":3,"sources":["webpack/bootstrap b77d474b5099634269d8","./javascript/entry.js","./javascript/game.js","./javascript/board.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACVD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAG;;AAEH;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACvIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,YAAY;AAC7B;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b77d474b5099634269d8\n **/","var Game = require('./game.js');\n\n\n\n(function () {\n  var rootEl = document.getElementById(\"minesweeper\");\n  var game = new Game(rootEl);\n\n  var handleClick = game.openTile;\n  document.addEventListener('click', handleClick);\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","var Board = require('./board.js');\n\nvar Game = function(rootEl) {\n  this.rootEl = rootEl;\n  var board = new Board(rootEl,8,8)\n\n}\n\nvar handleReplay = function() {\n  location.reload();\n}\n\nvar gameOver = function(el) {\n  if (document.getElementsByClassName(\"game-over\").length === 0) {\n    el.innerHTML = \"ðŸ’£\";\n    el.style.backgroundColor = \"red\";\n    var gameOver = document.createElement(\"h4\")\n    gameOver.innerHTML = \"GAME OVER!\"\n    gameOver.className = \"game-over\"\n    var replay = document.createElement(\"button\")\n    replay.onclick = handleReplay;\n    replay.className = \"replay\"\n    replay.innerHTML = \"Replay\"\n    document.getElementById(\"minesweeper\").appendChild(gameOver)\n    document.getElementById(\"minesweeper\").appendChild(replay)\n\n  }\n\n}\n\nvar gameWin = function() {\n  var allTiles = document.getElementsByClassName(\"tile\")\n\n  for (var i = 0; i < allTiles.length; i++) {\n    if (allTiles[i].dataset.isBomb === \"true\") {\n      allTiles[i].innerHTML = \"âš‘\"\n    }\n  }\n\n}\n\nvar checkWin = function() {\n  var allTiles = document.getElementsByClassName(\"tile\")\n  var count = 0\n  for (var i = 0; i < allTiles.length; i++) {\n    if (allTiles[i].style.backgroundColor === \"white\") {\n      count++\n    }\n  }\n  if (count === 56) {\n    return true\n  }\n  return false\n}\n\nvar handleCascade = function(el) {\n  var neighbors = getNeighbors(el)\n  console.log(neighbors);\n  var allTiles = document.getElementsByClassName(\"tile\")\n  neighbors.forEach(function(neighbor) {\n    if (neighbor >= 0 && neighbor < 64 && allTiles[neighbor].dataset.bombCount === \"0\" && allTiles[neighbor].style.backgroundColor !== \"white\") {\n      el.style.backgroundColor = \"white\";\n      handleCascade(allTiles[neighbor])\n    } else if (neighbor >= 0 && neighbor < 64){\n      if (allTiles[neighbor].dataset.bombCount === \"0\") {\n        el.style.backgroundColor = \"white\";\n        allTiles[neighbor].style.backgroundColor = \"white\";\n      } else {\n        allTiles[neighbor].style.backgroundColor = \"white\";\n        allTiles[neighbor].innerHTML = allTiles[neighbor].dataset.bombCount\n      }\n    }\n  })\n}\n\nvar getNeighbors = function(el) {\n  var currentTile = parseInt(el.id)\n\n  var allNeighbors;\n  if (currentTile === 7 || currentTile === 15 || currentTile === 23 || currentTile === 31 || currentTile === 39 || currentTile === 47 || currentTile === 55 ||currentTile === 63) {\n    allNeighbors = [\n      currentTile - 8,\n      currentTile + 8,\n      currentTile + 8 - 1,\n      currentTile - 1,\n      currentTile - 8 - 1\n\n    ]\n  } else if (currentTile % 8 === 0) {\n    allNeighbors = [\n      currentTile - 8,\n      currentTile - 8 + 1,\n      currentTile + 1,\n      currentTile + 8 + 1,\n      currentTile + 8\n    ]\n  } else {\n\n    allNeighbors = [\n      currentTile - 8,\n      currentTile - 8 + 1,\n      currentTile + 1,\n      currentTile + 8 + 1,\n      currentTile + 8,\n      currentTile + 8 - 1,\n      currentTile - 1,\n      currentTile - 8 - 1\n    ]\n  }\n  return allNeighbors;\n}\n\nGame.prototype.openTile = function(e) {\n  e.preventDefault();\n\n  var el = document.getElementById(e.target.id)\n  // console.log(e.target.id);\n  if (el.dataset.isBomb === \"true\") {\n    gameOver(el);\n\n  } else {\n\n    if (el.dataset.bombCount === \"0\") {\n      handleCascade(el);\n    } else {\n      el.style.backgroundColor = \"white\";\n      el.innerHTML = el.dataset.bombCount\n    }\n  }\n\n  if (checkWin()) {\n    gameWin();\n  }\n}\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/game.js\n ** module id = 1\n ** module chunks = 0\n **/","// var Tile = require('./tile.js');\n\nvar Board = function(rootEl,x,y) {\n  this.rootEl = rootEl\n  this.x = x\n  this.y = y\n  this.generateBoard();\n  this.assignValue();\n}\n\nBoard.prototype.handleNeighbors = function (tile) {\n  var currentTile = parseInt(tile.id)\n\n  var allNeighbors;\n  if (currentTile === 7 || currentTile === 15 || currentTile === 23 || currentTile === 31 || currentTile === 39 || currentTile === 47 || currentTile === 55 ||currentTile === 63) {\n    allNeighbors = [\n      currentTile - this.x - 1,\n      currentTile - 1,\n      currentTile + this.x - 1,\n      currentTile - this.x,\n      currentTile + this.x\n\n    ]\n  } else if (currentTile % 8 === 0) {\n    allNeighbors = [\n      currentTile + 1,\n      currentTile - this.x + 1,\n      currentTile + this.x + 1,\n      currentTile - this.x,\n      currentTile + this.x\n    ]\n  } else {\n\n    allNeighbors = [\n      currentTile - this.x - 1,\n      currentTile - this.x,\n      currentTile - this.x + 1,\n      currentTile - 1,\n      currentTile + 1,\n      currentTile + this.x - 1,\n      currentTile + this.x,\n      currentTile + this.x + 1\n    ]\n  }\n\n  for(var i = 0; i < allNeighbors.length; i++) {\n    if (allNeighbors[i] >= 0 && allNeighbors[i] < 64) {\n      var el = document.getElementById(allNeighbors[i])\n      el.dataset.bombCount = parseInt(el.dataset.bombCount) + 1\n    }\n  }\n};\n\nBoard.prototype.assignValue = function() {\n  var tiles = document.getElementsByClassName(\"tile\")\n\n  for (var i = 0; i < tiles.length; i++) {\n    if (tiles[i].dataset.isBomb === \"true\") {\n      this.handleNeighbors(tiles[i])\n      // tiles[i].style.backgroundColor = \"green\"\n    }\n  }\n}\n\nBoard.prototype.generateBoard = function() {\n  var count = 0;\n  var bombs = this.createBombs();\n  console.log(bombs);\n\n  for (var i = 0; i < this.x; i++) {\n    // var tempRow = [];\n    for (var j = 0; j < this.y; j++) {\n      var tile = document.createElement(\"div\")\n      tile.className = \"tile\"\n      tile.id = \"\" + count\n      tile.dataset.row = i\n      tile.dataset.col = j\n      tile.dataset.bombCount = 0\n      tile.style.backgroundColor = \"silver\"\n\n      if (bombs.indexOf(count) !== -1) {\n        tile.dataset.isBomb = \"true\"\n      } else {\n        tile.dataset.isBomb = \"false\"\n      }\n\n\n      this.rootEl.appendChild(tile)\n      count++\n    }\n  }\n}\n\nBoard.prototype.createBombs = function() {\n  var bombs = []\n  while (true) {\n    if (bombs.length === this.x) {\n      break\n    }\n\n    var x = Math.floor((Math.random() * 63));\n\n\n    if (bombs.indexOf(x) === -1) {\n      bombs.push(x)\n    }\n  }\n  return bombs\n}\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./javascript/board.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}